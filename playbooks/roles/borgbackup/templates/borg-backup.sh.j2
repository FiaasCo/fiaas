#!/bin/bash

if [ -z "$1" ] || [ ! -z "$2" ]
  then
    printf "Possible: info | init | list | backup | mount \n\n"
fi

# Sourcing the backup-passphrase

. /root/.borg.passphrase

# Small helper commands, like listing backups, will help us in the future :)

if [ "$1" = "info" ]
  then
    if [ -z "$2" ]; then printf "run $0 with list and use the backup-tag to request information\n"; exit 1; fi
{% for host in groups.backupservers %}
    REPOSITORY={{ borg_user }}@{{ hostvars[host].ansible_ssh_host }}:{{ borg_pool }}/{{ inventory_hostname }}
    /usr/local/bin/borg info $REPOSITORY::$2
{% endfor %}
    exit 0
fi

if [ "$1" = "mount" ]
  then
    if [ -z "$2" ]; then printf "Select the backup-server\n"; exit 1; fi
    if [ -z "$3" ]; then printf "Select the backup to mount\n"; exit 1; fi
    if [ -z "$4" ]; then printf "Select the path to mount the backup on\n"; exit 1; fi
{% for host in groups.backupservers %}
    REPOSITORY={{ borg_user }}@{{ hostvars[host].ansible_ssh_host }}:{{ borg_pool }}/{{ inventory_hostname }}
    /usr/local/bin/borg mount $REPOSITORY::$3 $4
    if [ "$?" = "0" ]; then printf "Backup mounted on $4, do not forget to unmount!\n"; fi
    exit 0
{% endfor %}
fi

if [ "$1" = "list" ]
  then
{% for host in groups.backupservers %}
    REPOSITORY={{ borg_user }}@{{ hostvars[host].ansible_ssh_host }}:{{ borg_pool }}/{{ inventory_hostname }}
    printf "Archives on {{ host }} ( {{ hostvars[host].ansible_ssh_host }} ):\n"
    /usr/local/bin/borg list -v $REPOSITORY
{% endfor %}
    exit 0
fi

if [ "$1" = "init" ]
  then
{% for host in groups.backupservers %}
    REPOSITORY={{ borg_user }}@{{ hostvars[host].ansible_ssh_host }}:{{ borg_pool }}/{{ inventory_hostname }}
    borg init $REPOSITORY
{% endfor %}
    exit 0
fi

if [ "$1" = "backup" ]
  then
    date=`date +%Y%m%d-%H%M`

    # Running some commands pre-backup
{% for precommand in backup_pre_commands %}
    {{ precommand }}
{% endfor %}

{% for host in groups.backupservers %}
    printf "Backing up to {{ host }} ( {{ hostvars[host].ansible_ssh_host }} ):\n"
    REPOSITORY={{ borg_user }}@{{ hostvars[host].ansible_ssh_host }}:{{ borg_pool }}/{{ inventory_hostname }}
    
    /usr/local/bin/borg create --stats $REPOSITORY::$date {% for dir in backup_include %}{{ dir }} {% endfor %}{% if automysql.stat.isdir is defined and automysql.stat.isdir == True %}/var/lib/automysqlbackup{% endif %}

    if [ "$?" -eq "0" ]; then printf "Backup succeeded on $date\n" >> /var/log/borg-backup.log; fi
  
    # Use the `prune` subcommand to maintain 7 daily, 4 weekly
    # and 6 monthly archives.
    /usr/local/bin/borg prune -v $REPOSITORY -H {{ retention.hourly }} -d {{ retention.daily }} -w {{ retention.weekly }} -m {{ retention.monthly }} -y {{ retention.yearly }}
{% endfor %}
fi

