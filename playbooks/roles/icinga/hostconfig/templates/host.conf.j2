#jinja2: trim_blocks: "true", lstrip_blocks: "true"
# {{ ansible_managed }}

object Host "{{ ansible_fqdn }}" {
  /* Import the default host template defined in `templates.conf`. */
  {% if monitoring_over_ssh|default(False) == True %}
  import "generic-host-no-ping"
  {% else %}
  import "generic-host"
  {% endif %}

  /* Specify the address attributes for checks e.g. `ssh` or `http`. */
  address = "{{ hostvars[inventory_hostname]['ansible_'+public_interface]['ipv4']['address'] }}"
  {% if hostvars[inventory_hostname]['ansible_'+public_interface]['ipv6']['address'] is defined %}
  address6 = "{{ hostvars[inventory_hostname]['ansible_'+public_interface]['ipv6']['address'] }}"
  {% endif %}

  /* Set custom attribute `os` for hostgroup assignment in `groups.conf`. */
  vars.os = "{{ ansible_system }}"

  vars.client_endpoint = name

  /* Services based on host_vars */
  vars.monitoring_over_ssh = "{{ monitoring_over_ssh | default(False) }}"
  vars.varnish = "{{ varnish_required | default(False) }}"
  vars.redis = "{{ redis_required | default(False) }}"
  vars.memcached = "{{ memcached_required | default(False) }}"
  vars.solr = "{{ solr_required | default(False) }}"
  vars.vsftpd = "{{ install_vsftpd |default(False) }}"
  vars.vsftpd_port = "{{ vsftpd_listen_port|default(990) }}"
  vars.backup = "{{ borgbackup_required | default(True) }}"
  vars.mysql = "{{ mysql_required | default(True) }}"
  vars.mysql_user = "{{ monitor_mysql.user | default('') }}"
  vars.mysql_pass = "{{ monitor_mysql.pass | default('') }}"

  {% if vhosts is defined %}
  {% for v in vhosts %}
  {% if v.delete is not defined %}
  {% if v.monitoring == True %}
  {% if v.ssl is defined and v.ssl != "False" %}
  vars.vhosts_https["{{ v.url }}"] = {
  }
  {% else %}
  vars.vhosts_http["{{ v.url }}"] = {
  }
  {% endif %}
  {% endif %}
  {% endif %}
  {% endfor %}
  {% endif %}

  {% if solr_required | default(False) == True %}
  {% for core in solr_cores %}
  {% if core.delete is not defined %}
  vars.solr_uri = "/solr/{{ core.name }}/admin/ping"
  vars.solr_auth_pair = "{{ core.name }}:{{ core.pass }}"
  {% endif %}
  {% endfor %}
  {% endif %}

  /* Define disks and attributes for service apply rules in `services.conf`. */
  vars.disks["disk"] = {
    /* No parameters. */
  }

}

{% if inventory_hostname not in groups.icingaservers %}
object Endpoint "{{ ansible_fqdn }}" {
}

object Zone "{{ ansible_fqdn }}"  {
	endpoints = [ "{{ ansible_fqdn }}" ];
	parent = "master";
}
{% endif %}
