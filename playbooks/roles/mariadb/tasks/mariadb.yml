---
- name: remove conflicting mysql packages
  apt:
    name: "{{ item }}"
    state: absent
  with_items:
    - mysql-client-5.5
    - mysql-server-5.5
    - mysql-server-core-5.5
    - libmysqlclient18

- name: remove obsolete config files (my.cnf alternative will try to use it otherwise)
  file:
    path: "/etc/mysql/{{ item }}"
    state: absent
  with_items:
    - my.cnf.migrated
    - my.cnf.fallback

- name: install mariadb
  apt:
    name: "{{ item }}"
    state: latest
    cache_valid_time: 3600
    update_cache: yes
  with_items:
    - mariadb-client
    - mariadb-server
    - automysqlbackup
    - python-mysqldb
  register: mysqlinstall
  notify: start mysql

- name: confirm my.cnf alternative is correct
  alternatives:
    name: my.cnf
    path: /etc/mysql/mariadb.cnf

- name: put mariadb.conf.d templates
  template:
    src: "{{ item }}.j2"
    dest: "/etc/mysql/mariadb.conf.d/{{ item }}"
    owner: root
    group: root
    mode: "0644"
  with_items:
    - 50-server.cnf
  notify: restart mysql

- name: put conf.d templates
  template:
    src: innodb.cnf.j2
    dest: /etc/mysql/conf.d/innodb.cnf
    owner: root
    group: root
    mode: "0644"
  notify: restart mysql

- name: ensure mariadb is running
  meta: flush_handlers

- name: generate random password
  shell: openssl passwd -in /dev/urandom | head -1
  register: mysqlrootpass
  when: mysqlinstall.changed

- name: create rootuser
  mysql_user:
    name: root
    host: "{{ item }}"
    password: "{{ mysqlrootpass.stdout }}"
    priv: "*.*:ALL,GRANT"
  with_items:
    - "{{ ansible_hostname|lower }}"
    - 127.0.0.1
    - ::1
    - localhost
  when: mysqlrootpass.changed

- name: save root password for mariadb
  template:
    src: root-my.cnf.j2
    dest: /root/.my.cnf
    owner: root
    group: root
    mode: "0600"
  when: mysqlrootpass.changed

- name: configure automysqlbackup
  template:
    src: automysqlbackup.j2
    dest: /etc/default/automysqlbackup
    owner: root
    group: root
    mode: "0644"

- name: grant usage for monitor user
  mysql_user:
    name: "{{ monitor_mysql.user }}"
    password: "{{ monitor_mysql.pass }}"
    priv: "*.*:USAGE"
    state: present
    append_privs: yes
